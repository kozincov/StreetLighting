@using WebApplicationLighting.ViewModels
@model IndexViewModel

@{
    ViewData["Title"] = "Streets";
}

<h2>Сведенье о Улицах</h2>
<form method="get">
    <div class="form-inline">
        <label class="control-label">StreetName: </label>
        @Html.TextBox("streetName", Model.FilterViewModel.SelectedStreetName, htmlAttributes: new { @class = "form-control" })

        <input type="submit" value="Filter" class="btn btn-default" />
    </div>
</form>
<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@(Model.SortViewModel.StreetNameAscSort)"
                       asp-route-streetName="@(Model.FilterViewModel.SelectedStreetName)">Название Улицы</a>
                </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Streets) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StreetName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.StreetId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.StreetId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.StreetId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}