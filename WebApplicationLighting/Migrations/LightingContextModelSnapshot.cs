// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApplicationLighting;

namespace WebApplicationLighting.Migrations
{
    [DbContext(typeof(LightingContext))]
    partial class LightingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplicationLighting.Lamps", b =>
                {
                    b.Property<int>("LampId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LampID");

                    b.Property<string>("LampName");

                    b.Property<string>("LampType");

                    b.Property<int?>("LifeTime");

                    b.Property<int?>("Power");

                    b.HasKey("LampId");

                    b.ToTable("Lamps");
                });

            modelBuilder.Entity("WebApplicationLighting.Lanterns", b =>
                {
                    b.Property<int>("LanternId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("LanternID");

                    b.Property<string>("LanternName");

                    b.Property<string>("LanternType");

                    b.HasKey("LanternId");

                    b.ToTable("Lanterns");
                });

            modelBuilder.Entity("WebApplicationLighting.Sections", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SectionID");

                    b.Property<int>("BeginAndEnd")
                        .HasColumnName("Begin_and_End");

                    b.Property<string>("SectionName");

                    b.Property<int>("StreetId")
                        .HasColumnName("StreetID");

                    b.HasKey("SectionId");

                    b.HasIndex("StreetId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("WebApplicationLighting.StreetLightings", b =>
                {
                    b.Property<int>("StreetLightingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StreetLightingID");

                    b.Property<int?>("CountLantern");

                    b.Property<DateTime?>("Failure")
                        .HasColumnType("datetime");

                    b.Property<int?>("LampId")
                        .HasColumnName("LampID");

                    b.Property<int?>("LanternId")
                        .HasColumnName("LanternID");

                    b.Property<int?>("SectionId")
                        .HasColumnName("SectionID");

                    b.HasKey("StreetLightingId");

                    b.HasIndex("LampId");

                    b.HasIndex("LanternId");

                    b.HasIndex("SectionId");

                    b.ToTable("StreetLightings");
                });

            modelBuilder.Entity("WebApplicationLighting.Streets", b =>
                {
                    b.Property<int>("StreetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("StreetID");

                    b.Property<string>("StreetName");

                    b.HasKey("StreetId");

                    b.ToTable("Streets");
                });

            modelBuilder.Entity("WebApplicationLighting.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnName("UserID");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<bool?>("IsAdmin");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WebApplicationLighting.Sections", b =>
                {
                    b.HasOne("WebApplicationLighting.Streets", "Street")
                        .WithMany("Sections")
                        .HasForeignKey("StreetId")
                        .HasConstraintName("FK_Sections_Streets")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebApplicationLighting.StreetLightings", b =>
                {
                    b.HasOne("WebApplicationLighting.Lamps", "Lamp")
                        .WithMany("StreetLightings")
                        .HasForeignKey("LampId")
                        .HasConstraintName("FK_StreetLightings_Lamps");

                    b.HasOne("WebApplicationLighting.Lanterns", "Lantern")
                        .WithMany("StreetLightings")
                        .HasForeignKey("LanternId")
                        .HasConstraintName("FK_StreetLightings_Lanterns");

                    b.HasOne("WebApplicationLighting.Sections", "Section")
                        .WithMany("StreetLightings")
                        .HasForeignKey("SectionId")
                        .HasConstraintName("FK_StreetLightings_Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
